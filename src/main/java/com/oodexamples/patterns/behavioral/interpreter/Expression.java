package com.oodexamples.patterns.behavioral.interpreter;


/*
    The Interpreter pattern uses a class to represent each grammar rule. Symbols on the right-hand
    side of the rule are instance variables of these classes.

    Formally, the pattern is defined as describe a way to represent the grammar of a language along with
    an interpreter that uses the representation to interpret sentences in the language.

    CONTEXT FREE GRAMMAR

    A CFG consists of four components:
    start symbol
    - a set of terminal symbols
    - a set of non-terminal symbols
    - a set of productions (rules)


    Class Diagram

    - Abstract Expression
    - Terminal Expression
    - Nonterminal Expression
    - Context
    - Client

    Context-free grammars are those grammars in which the left-hand side of each production rule consists of
    only a single nonterminal symbol. This restriction is non-trivial; not all languages can be generated by
    ontext-free grammars. Those that can are called context-free languages. These are exactly the languages
    that can be recognized by a non-deterministic push down automaton. Context-free languages are the theoretical
     basis for the syntax of most programming languages.
 */

public  interface Expression {
    boolean interpret(String context);
}
